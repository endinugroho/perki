{"version":3,"sources":["views/poster/index.js"],"names":["Index","useState","data","setData","modal","setModal","modalImg","setModalImg","galleryData","setGalleryData","img","setImg","useEffect","fetchData","axios","get","process","then","res","console","log","status","dataRes","catch","err","showImg","src","title","width","visible","onCancel","footer","onClick","className","map","row","i","desc","undefined","style","marginTop","fontSize","instansi","float","padding","cursor","detil","showGallery","length"],"mappings":"uQAuKeA,UAjKD,WACZ,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAsCN,mBAAS,IAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAAsBR,mBAAS,IAA/B,mBAAOS,EAAP,KAAYC,EAAZ,KAEAC,qBAAU,WACI,MAARV,GACFW,MAED,CAACX,IAEJ,IAAMW,EAAY,WAChBC,IACGC,IADH,UACUC,qEADV,wBAEGC,MAAK,SAACC,GAEL,GADAC,QAAQC,IAAIF,EAAIhB,KAAKmB,QACC,GAAnBH,EAAIhB,KAAKmB,OAAY,CACtB,IAAIC,EAAUJ,EAAIhB,KAAKA,KACvBC,EAAQmB,QAERnB,EAAQ,OAGXoB,OAAM,SAACC,GAAD,OAASL,QAAQC,IAAII,OAQ1BC,EAAU,SAACC,GACff,EAAOe,GACPnB,GAAY,IAGd,OACE,qCAEE,cAAC,IAAD,CACEoB,MAAK,mBACLC,MAAO,MACPC,QAASzB,EACT0B,SAAU,kBAAMzB,GAAS,IACzB0B,OAAQ,CACN,cAAC,IAAD,CAAmBC,QAAS,kBAAM3B,GAAS,IAA3C,kBAAY,SANhB,SAWE,qBAAK4B,UAAU,MAAf,SACGzB,EAAY0B,KAAI,SAACC,EAAKC,GACrB,OACE,sBAEEH,UAAU,2DAFZ,UAIE,qCAJF,MAIiBE,EAAIE,KACnB,4BACYC,GAAXH,EAAIzB,IACH,qBACE6B,MAAO,CAAEX,MAAO,OAAQY,UAAW,QACnCb,MAAM,qBACND,IAAG,UAAKV,4CAAL,kBAAyCmB,EAAIzB,KAChDsB,QAAS,kBACPP,EAAQ,GAAD,OAAIT,4CAAJ,kBAAwCmB,EAAIzB,SAGrD,KAAM,MAdL0B,UAsBf,cAAC,IAAD,CACET,MAAK,mBACLC,MAAO,OACPC,QAASvB,EACTwB,SAAU,kBAAMvB,GAAY,IAC5BwB,OAAQ,CACN,cAAC,IAAD,CAAmBC,QAAS,kBAAMzB,GAAY,IAA9C,kBAAY,SANhB,SAWE,qBAAKgC,MAAO,CAAEX,MAAO,QAAUF,IAAKhB,EAAKkB,MAAM,WAGjD,eAAC,IAAD,WACE,cAAC,IAAD,CAAaW,MAAO,CAAEE,SAAU,QAAhC,SACE,sBAAMR,UAAU,mBAAhB,wBAEF,cAAC,IAAD,UACE,cAAC,KAAD,UACE,sBAAKA,UAAU,0CAAf,UACG/B,EACC,mCACE,cAAC,KAAD,UACGA,EAAKgC,KAAI,SAACC,EAAKC,GACd,OACE,qBAEEH,UAAU,wCAFZ,SAIE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,4CADF,MACwBE,EAAIO,SAD5B,IACsC,uBACpC,qCAFF,MAEiBP,EAAIE,KAAM,IACzB,sBACEJ,UAAU,sBACVM,MAAO,CACLI,MAAO,QACPC,QAAS,MACTC,OAAQ,WAEVb,QAAS,kBA3FnB,SAACI,GACnB3B,EAAeP,EAAKkC,GAAGU,OACvBzC,GAAS,GAyFkC0C,CAAYX,IAP7B,8BAUQ,IACR,4BACiBE,GAAhBH,EAAIW,MAAM,GACT,qBACEP,MAAO,CAAEX,MAAO,OAAQY,UAAW,QACnCb,MAAM,qBACND,IAAG,UAAKV,4CAAL,kBAAyCmB,EAAIW,MAAM,GAAGpC,KACzDsB,QAAS,kBACPP,EAAQ,GAAD,OACFT,4CADE,kBACkCmB,EAAIW,MAAM,GAAGpC,SAIxD,WA9BH0B,UAuCf,6CAGAlC,GACE,mCACkB,GAAfA,EAAK8C,OAAc,yCAAmB","file":"static/js/94.654f1750.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { CRow, CCol, CCard, CCardHeader, CCardBody } from \"@coreui/react\";\r\nimport axios from \"axios\";\r\nimport { Modal, Button } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nconst Index = () => {\r\n  const [data, setData] = useState(null);\r\n  const [modal, setModal] = useState(false);\r\n  const [modalImg, setModalImg] = useState(false);\r\n  const [galleryData, setGalleryData] = useState([]);\r\n  const [img, setImg] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (data == null) {\r\n      fetchData();\r\n    }\r\n  }, [data]);\r\n\r\n  const fetchData = () => {\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_URL}?function=getPoster`)\r\n      .then((res) => {        \r\n        console.log(res.data.status)\r\n        if(res.data.status == 1){\r\n          let dataRes = res.data.data;\r\n          setData(dataRes);\r\n        }else{\r\n          setData([]);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const showGallery = (i) => {\r\n    setGalleryData(data[i].detil);\r\n    setModal(true);\r\n  };\r\n\r\n  const showImg = (src) => {\r\n    setImg(src);\r\n    setModalImg(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Modal Galley */}\r\n      <Modal\r\n        title={`Gallery e-Poster`}\r\n        width={\"80%\"}\r\n        visible={modal}\r\n        onCancel={() => setModal(false)}\r\n        footer={[\r\n          <Button key=\"back\" onClick={() => setModal(false)}>\r\n            Close\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <div className=\"row\">\r\n          {galleryData.map((row, i) => {\r\n            return (\r\n              <div\r\n                key={i}\r\n                className=\"col-lg-4 col-md-6 col-sm-12 col-xs-12 shadow p-3 rounded\"\r\n              >\r\n                <b>Desc</b> : {row.desc}\r\n                <br />\r\n                {row.img != undefined ? (\r\n                  <img\r\n                    style={{ width: \"100%\", marginTop: \"21px\" }}\r\n                    title=\"click for big size\"\r\n                    src={`${process.env.REACT_APP_FILE}poster/${row.img}`}\r\n                    onClick={() =>\r\n                      showImg(`${process.env.REACT_APP_FILE}poster/${row.img}`)\r\n                    }\r\n                  />\r\n                ) : null}{\" \"}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </Modal>\r\n\r\n      {/* Modal IMG */}\r\n      <Modal\r\n        title={`Gallery e-Poster`}\r\n        width={\"100%\"}\r\n        visible={modalImg}\r\n        onCancel={() => setModalImg(false)}\r\n        footer={[\r\n          <Button key=\"back\" onClick={() => setModalImg(false)}>\r\n            Close\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <img style={{ width: \"100%\" }} src={img} width=\"100%\" />\r\n      </Modal>\r\n\r\n      <CCard>\r\n        <CCardHeader style={{ fontSize: \"25px\" }}>\r\n          <span className=\"badge badge-info\">e-Poster</span>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CRow>\r\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n              {data ? (\r\n                <>\r\n                  <CRow>\r\n                    {data.map((row, i) => {\r\n                      return (\r\n                        <div\r\n                          key={i}\r\n                          className=\"col-lg-4 col-md-3 col-sm-12 col-xs-12\"\r\n                        >\r\n                          <CCard>\r\n                            <CCardBody>\r\n                              <b>Affiliation</b> : {row.instansi} <br />\r\n                              <b>Desc</b> : {row.desc}{\" \"}\r\n                              <span\r\n                                className=\"badge badge-primary\"\r\n                                style={{\r\n                                  float: \"right\",\r\n                                  padding: \"7px\",\r\n                                  cursor: \"pointer\",\r\n                                }}\r\n                                onClick={() => showGallery(i)}\r\n                              >\r\n                                View More Poster\r\n                              </span>{\" \"}\r\n                              <br />\r\n                              {row.detil[0] != undefined ? (\r\n                                <img\r\n                                  style={{ width: \"100%\", marginTop: \"21px\" }}\r\n                                  title=\"click for big size\"\r\n                                  src={`${process.env.REACT_APP_FILE}poster/${row.detil[0].img}`}\r\n                                  onClick={() =>\r\n                                    showImg(\r\n                                      `${process.env.REACT_APP_FILE}poster/${row.detil[0].img}`\r\n                                    )\r\n                                  }\r\n                                />\r\n                              ) : null}\r\n                            </CCardBody>\r\n                          </CCard>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </CRow>\r\n                </>\r\n              ) : (\r\n                <h4>Please wait</h4>\r\n              )}\r\n              {\r\n                data && (\r\n                  <>\r\n                    {data.length == 0 ? <h4>No Data</h4> : null}\r\n                  </>\r\n                )\r\n              }\r\n            </div>\r\n          </CRow>\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n  "],"sourceRoot":""}