{"version":3,"sources":["views/editors/code-editors/_examples.js","views/editors/code-editors/CodeEditors.js","reusable/DocsLink.js","reusable/ProBadge.js"],"names":["sampleCode","markdown","javascript","xml","CodeEditors","darkMode","useSelector","state","React","useState","content","setContent","options","lineNumbers","mode","theme","autofocus","scrollbarStyle","href","value","onBeforeChange","editor","data","DocsLink","props","name","text","rest","className","rel","target","memo","ProBadge","children","attributes","color"],"mappings":"qPAmEeA,G,gDAnEK,CAClBC,SAAU,wQAGVC,WAAY,0IACZC,IAAK,0wD,QC+CQC,UA9BK,WAClB,IAAMC,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,YAC5C,EAA8BG,IAAMC,SAAST,EAAWG,KAAxD,mBAAOO,EAAP,KAAgBC,EAAhB,KAEMC,EAAU,CACdC,aAAa,EACbC,KAAM,MACNC,MAAOV,EAAW,WAAa,UAC/BW,WAAW,EACXC,eAAgB,UAGlB,OACE,eAAC,IAAD,WACE,eAAC,IAAD,sCAC2B,IACzB,cAAC,IAAD,qCACA,cAAC,IAAD,CAAUC,KAAK,mDAEjB,cAAC,IAAD,UACE,cAAC,aAAD,CACEC,MAAOT,EACPE,QAASA,EACTQ,eAAgB,SAACC,EAAQC,EAAMH,GAAf,OAAyBR,EAAWQ,a,6KC1CxDI,EAAW,SAAAC,GACf,IACEC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,KACGC,EAHL,YAIIH,EAJJ,GAMMN,EAAOO,EAAI,kDAA8CA,GAASD,EAAMN,KAE9E,OACE,qBAAKU,UAAU,sBAAf,SACE,cAAC,KAAD,2BACMD,GADN,IAEET,KAAMA,EACNW,IAAI,sBACJC,OAAO,SACPF,UAAU,qBALZ,SAOE,uBAAOA,UAAU,aAAjB,SAAgCF,GAAQ,eAMjClB,MAAMuB,KAAKR,G,eCvBpBS,EAAW,SAAAR,GACf,qBAAuCA,GAAjCS,EAAN,EAAMA,SAAaC,EAAnB,iBACA,OACE,cAAC,IAAD,yBACEhB,KAAK,+BACLiB,MAAM,SACNL,OAAO,SACPD,IAAI,uBACAK,GALN,aAOGD,GAAsB,2BASdzB,MAAMuB,KAAKC","file":"static/js/72.364d8acb.chunk.js","sourcesContent":["const sampleCode =  {\r\n  markdown: '### [CodeMirror](http://codemirror.net)\\n' +\r\n  'A versatile _text_ editor implemented in **JavaScript*** for the browser. \\n' +\r\n  'It is specialized for editing `code`, and comes with a number of language modes and addons that implement more advanced editing functionality.\\n',\r\n  javascript: 'var component = {\\n\\tname: \"react-codemirror2\",\\n\\tauthor: \"Salvatore Niro\",\\n\\trepo: \"https://github.com/scniro/react-codemirror2\"\\n};',\r\n  xml: '<!DOCTYPE html>\\n' +\r\n  '<html lang=\"en\">\\n' +\r\n  '<head>\\n' +\r\n  '\\n' +\r\n  '  <meta charset=\"utf-8\"/>\\n' +\r\n  '  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/>\\n' +\r\n  '  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"/>\\n' +\r\n  '  <meta name=\"description\" content=\"\"/>\\n' +\r\n  '  <meta name=\"author\" content=\"Łukasz Holeczek\"/>\\n' +\r\n  '  <meta name=\"keyword\" content=\"\"/>\\n' +\r\n  '  <link rel=\"shortcut icon\" href=\"img/favicon.png\"/>\\n' +\r\n  '\\n' +\r\n  '  <title></title>\\n' +\r\n  '\\n' +\r\n  '  <!-- Icons -->\\n' +\r\n  '  <link href=\"node_modules/font-awesome/css/font-awesome.min.css\" rel=\"stylesheet\"/>\\n' +\r\n  '  <link href=\"node_modules/simple-line-icons/css/simple-line-icons.css\" rel=\"stylesheet\"/>\\n' +\r\n  '\\n' +\r\n  '  <!-- Main styles for this application -->\\n' +\r\n  '  <link href=\"css/style.css\" rel=\"stylesheet\"/>\\n' +\r\n  '\\n' +\r\n  '</head>\\n' +\r\n  '\\n' +\r\n  '\\n' +\r\n  '<body class=\"app header-fixed sidebar-fixed aside-menu-fixed aside-menu-hidden\">\\n' +\r\n  '  <header class=\"app-header navbar\">\\n' +\r\n  '  <h1>I ♥ react-codemirror2</h1>\\n' +\r\n  '  ...\\n' +\r\n  '</header>\\n' +\r\n  '  <div class=\"app-body\">\\n' +\r\n  '    <div class=\"sidebar\">\\n' +\r\n  '      ...\\n' +\r\n  '    </div>\\n' +\r\n  '    <!-- Main content -->\\n' +\r\n  '    <main class=\"main\">\\n' +\r\n  '\\n' +\r\n  '    </main>\\n' +\r\n  '    <aside class=\"aside-menu\">\\n' +\r\n  '      ...\\n' +\r\n  '    </aside>\\n' +\r\n  '  </div>\\n' +\r\n  '  <footer class=\"app-footer\">\\n' +\r\n  '    ...\\n' +\r\n  '  </footer>\\n' +\r\n  '\\n' +\r\n  '  <!-- Bootstrap and necessary plugins -->\\n' +\r\n  '  <script src=\"node_modules/jquery/dist/jquery.min.js\"></script>\\n' +\r\n  '  <script src=\"node_modules/popper.js/dist/umd/popper.min.js\"></script>\\n' +\r\n  '  <script src=\"node_modules/bootstrap/dist/js/bootstrap.min.js\"></script>\\n' +\r\n  '  <script src=\"node_modules/pace-progress/pace.min.js\"></script>\\n' +\r\n  '\\n' +\r\n  '  <!-- Plugins and scripts required by all views -->\\n' +\r\n  '  <script src=\"node_modules/chart.js/dist/Chart.min.js\"></script>\\n' +\r\n  '\\n' +\r\n  '  <!-- Main scripts -->\\n' +\r\n  '  <script src=\"js/app-config.js\"></script>\\n' +\r\n  '  <script src=\"js/app.js\"></script>\\n' +\r\n  '\\n' +\r\n  '</body>\\n' +\r\n  '</html>',\r\n};\r\n\r\nexport default sampleCode\r\n","import React from 'react'\r\nimport {\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n} from '@coreui/react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Controlled as CodeMirror } from 'react-codemirror2'\r\n\r\nimport { ProBadge, DocsLink } from 'src/reusable'\r\n\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/eclipse.css'\r\nimport 'codemirror/theme/twilight.css'\r\nimport 'codemirror/addon/scroll/simplescrollbars.css'\r\nimport 'codemirror/addon/scroll/simplescrollbars.js'\r\n// import 'codemirror/mode/markdown/markdown'\r\n// import 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/xml/xml'\r\n\r\nimport sampleCode from './_examples'\r\n\r\nconst CodeEditors = () => {\r\n  const darkMode = useSelector(state => state.darkMode)\r\n  const [content, setContent] = React.useState(sampleCode.xml)\r\n\r\n  const options = {\r\n    lineNumbers: true,\r\n    mode: 'xml',\r\n    theme: darkMode ? 'twilight' : 'eclipse',\r\n    autofocus: true,\r\n    scrollbarStyle: 'simple'\r\n  }\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardHeader>\r\n        Code Editor - CodeMirror{' '}\r\n        <ProBadge>CoreUI Pro integration</ProBadge>\r\n        <DocsLink href=\"https://github.com/scniro/react-codemirror2\"/>\r\n      </CCardHeader>\r\n      <CCardBody>\r\n        <CodeMirror\r\n          value={content}\r\n          options={options}\r\n          onBeforeChange={(editor, data, value) => setContent(value)}\r\n        />\r\n      </CCardBody>\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default CodeEditors\r\n","import React from 'react'\r\nimport { CLink } from '@coreui/react'\r\n\r\nconst DocsLink = props => {\r\n  const {\r\n    name,\r\n    text,\r\n    ...rest\r\n  } = props\r\n\r\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\r\n\r\n  return (\r\n    <div className=\"card-header-actions\">\r\n      <CLink \r\n        {...rest}\r\n        href={href}\r\n        rel=\"noreferrer noopener\" \r\n        target=\"_blank\" \r\n        className=\"card-header-action\"  \r\n      >\r\n        <small className=\"text-muted\">{ text || 'docs' }</small>\r\n      </CLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(DocsLink)","import React from 'react'\r\nimport { CBadge } from '@coreui/react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProBadge = props => {\r\n  let { children, ...attributes } = { ...props }\r\n  return (\r\n    <CBadge\r\n      href=\"https://coreui.io/pro/react/\"\r\n      color=\"danger\"\r\n      target=\"_blank\"\r\n      rel=\"noreferrer noopener\"\r\n      {...attributes}\r\n    >\r\n      {children ? children : 'CoreUI Pro Component'}\r\n    </CBadge>\r\n  )\r\n}\r\n\r\nProBadge.propTypes = {\r\n  children: PropTypes.node\r\n}\r\n\r\nexport default React.memo(ProBadge)\r\n"],"sourceRoot":""}