{"version":3,"sources":["views/theme/zoom/App.js","views/theme/zoom/reportWebVitals.js","views/theme/zoom/index.js"],"names":["crypto","require","ZoomMtg","setZoomJSLib","preLoadWasm","prepareWebSDK","i18n","load","reload","apiKey","meetingNumber","userName","localStorage","getItem","App","props","useState","isOpen","setIsOpen","startMeeting","signature","document","getElementById","style","display","init","disablePreview","leaveUrl","success","console","log","join","userEmail","passWord","tk","error","useEffect","apiSecret","role","timestamp","Date","getTime","msg","Buffer","from","toString","hash","createHmac","update","digest","generateSignature","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","title","title2"],"mappings":"8OAKMA,G,QAASC,EAAQ,MAEvBC,UAAQC,aAAa,mCAAoC,OAEzDD,UAAQE,cACRF,UAAQG,gBAERH,UAAQI,KAAKC,KAAK,SAClBL,UAAQI,KAAKE,OAAO,SASpB,IACIC,EAAS,yBAETC,EAAgB,cAGhBC,EAAWC,aAAaC,QAAQ,QA6FrBC,IApFH,SAAAC,GAIV,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KA2CA,SAASC,EAAaC,GACpBC,SAASC,eAAe,cAAcC,MAAMC,QAAU,QACtDtB,UAAQuB,KAAK,CACXC,gBAAe,EACfC,SA7DS,8EA8DTC,QAAS,SAACA,GACRC,QAAQC,IAAIF,GAEZ1B,UAAQ6B,KAAK,CACXX,UAAWA,EACXV,cAAeA,EACfC,SAAUA,EACVF,OAAQA,EACRuB,UApEM,0BAqENC,SApEK,SAqELC,GApEY,GAqEZN,QAAS,SAACA,GACRC,QAAQC,IAAIF,GACZV,GAAU,IAEZiB,MAAO,SAACA,GACNN,QAAQC,IAAIK,GACZjB,GAAU,OAKhBiB,MAAO,SAACA,GACNN,QAAQC,IAAIK,GACZjB,GAAU,MAKhB,OA5EAkB,qBAAU,WAOK,GAAVnB,GAEDE,EAIJ,SAA2BV,EAAQ4B,EAAW3B,EAAe4B,GAG3D,IAAMC,GAAY,IAAIC,MAAOC,UAAY,IACnCC,EAAMC,EAAOC,KAAKnC,EAASC,EAAgB6B,EAAYD,GAAMO,SAAS,UACtEC,EAAO9C,EAAO+C,WAAW,SAAUV,GAAWW,OAAON,GAAKO,OAAO,UAGvE,OAFkBN,EAAOC,KAAP,UAAenC,EAAf,YAAyBC,EAAzB,YAA0C6B,EAA1C,YAAuDD,EAAvD,YAA+DQ,IAAQD,SAAS,UAVnFK,CAAkBzC,EA3BpB,uCA2BuCC,EAzB7C,MA2BN,CAACO,IAiEI,M,mJC1GKkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,gCAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCDMnD,EAAQ,MAiB5B2D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChD,EAAA,EAAD,CAAMiD,MAAO,QAASC,OAAQ,cAEhC3C,SAASC,eAAe,SAQ1B6B,K","file":"static/js/33.bea7b2dc.chunk.js","sourcesContent":["// import React from 'react';\nimport React, { useEffect, useState } from 'react'\nimport { ZoomMtg } from '@zoomus/websdk';\nimport { useParams } from \"react-router-dom\";\nimport './App.css';\nconst crypto = require('crypto'); // crypto comes with Node.js\n// declare ZoomMtg;\nZoomMtg.setZoomJSLib('https://source.zoom.us/1.9.9/lib', '/av');\n\nZoomMtg.preLoadWasm();\nZoomMtg.prepareWebSDK();\n// loads language files, also passes any error messages to the ui\nZoomMtg.i18n.load('en-US');\nZoomMtg.i18n.reload('en-US');\n\n// setup your signature endpoint here: https://github.com/zoom/meetingsdk-sample-signature-node.js\n// var meetingNumber = \"79190715224\";\n// var meetingNumber = \"83601178402\";\n// var meetingNumber = localStorage.getItem(\"meetingid\");\n// var leaveUrl = 'http://localhost:3000/#/theme/session';\n// var userName = localStorage.getItem(\"nama\");\n// https://us02web.zoom.us/j/87189194063?pwd=V0I5c1pPNDU5RWVyTUxZRDkvQkhyUT09\nvar signatureEndpoint = ''\nvar apiKey = 'sw1o-LaLTtaMC0xjZ9ghdw'\nvar apiSecret  = 'NDRYGCnfiSXNSosr25YEPnKOkKU4rf8ksSiF';\nvar meetingNumber = \"87692281345\";\nvar role = 0;\nvar leaveUrl = 'https://acsasurabaya2021.com/wp-content/plugins/perki/build/#/theme/session';\nvar userName = localStorage.getItem(\"nama\");\nvar userEmail = 'random1002310@gmail.com';\nvar passWord = '263137';\nvar registrantToken = ''\n// var passWord = 'RGNtNTYzbEVjNG9VZWFWSUdvQjNhZz09';\n// pass in the registrant's token if your meeting or webinar requires registration. More info here:\n// Meetings: https://marketplace.zoom.us/docs/sdk/native-sdks/web/build/meetings/join#join-registered\n// Webinars: https://marketplace.zoom.us/docs/sdk/native-sdks/web/build/webinars/join#join-registered-webinar\n\nconst App = props => {\n// const { id } = useParams();\n// const {id} = props\n// const { title, title2 } = props\n  const [isOpen, setIsOpen] = useState(false)\n  useEffect(() => {\n    // console.log(\"id=\",props.title);\n    // console.log(\"id2=\",props);\n\n    // setTimeout(function() { //Start the timer\n    //   getSignature();\n    // }.bind(this), 100);\n    if(isOpen != true){\n      // startMeeting(localStorage.getItem('signature'));\n      startMeeting(generateSignature(apiKey, apiSecret, meetingNumber, role));\n    }\n  }, [isOpen]);\n\n  function generateSignature(apiKey, apiSecret, meetingNumber, role) {\n\n    // Prevent time sync issue between client signature generation and zoom\n    const timestamp = new Date().getTime() - 30000\n    const msg = Buffer.from(apiKey + meetingNumber + timestamp + role).toString('base64')\n    const hash = crypto.createHmac('sha256', apiSecret).update(msg).digest('base64')\n    const signature = Buffer.from(`${apiKey}.${meetingNumber}.${timestamp}.${role}.${hash}`).toString('base64')\n\n    return signature\n  }\n\n  function getSignature() {\n    // e.preventDefault();\n    startMeeting(localStorage.getItem('signature'));\n    // fetch(signatureEndpoint, {\n    //   method: 'POST',\n    //   headers: { 'Content-Type': 'application/json' },\n    //   body: JSON.stringify({\n    //     meetingNumber: meetingNumber,\n    //     role: role\n    //   })\n    // }).then(res => res.json())\n    // .then(response => {\n    //   startMeeting(response.signature)\n    // }).catch(error => {\n    //   console.error(error)\n    // })\n  }\n\n  function startMeeting(signature) {\n    document.getElementById('zmmtg-root').style.display = 'block'\n    ZoomMtg.init({\n      disablePreview:true,\n      leaveUrl: leaveUrl,\n      success: (success) => {\n        console.log(success)\n\n        ZoomMtg.join({\n          signature: signature,\n          meetingNumber: meetingNumber,\n          userName: userName,\n          apiKey: apiKey,\n          userEmail: userEmail,\n          passWord: passWord,\n          tk: registrantToken,\n          success: (success) => {\n            console.log(success)\n            setIsOpen(true)\n          },\n          error: (error) => {\n            console.log(error)\n            setIsOpen(false)\n          }\n        })\n\n      },\n      error: (error) => {\n        console.log(error)\n        setIsOpen(false)\n      }\n    })\n  }\n\n  return ('');\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { useLocation } from \"react-router-dom\";\nconst queryString = require('query-string');\n\n\n\n// function App1() {\n//   const location = useLocation();\n\n//   return (\n//     <React.StrictMode>\n//     <App  title={URLSearchParams(window.location.search).get(\"hasil\")} title2={\"Hockey2\"} />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n//   );\n// }\n\n// export default App1;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App  title={\"hallo\"} title2={\"Hockey2\"} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// const { id } = useParams();\n\nreportWebVitals();\n\n\n"],"sourceRoot":""}