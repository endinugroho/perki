{"version":3,"sources":["views/theme/zoom/App.js","views/theme/zoom/reportWebVitals.js","views/theme/zoom/index.js"],"names":["crypto","require","ZoomMtg","setZoomJSLib","preLoadWasm","prepareWebSDK","i18n","load","reload","apiKey","meetingNumber","localStorage","getItem","leaveUrl","userName","userEmail","passWord","App","props","useState","isOpen","setIsOpen","useEffect","signature","apiSecret","role","timestamp","Date","getTime","msg","Buffer","from","toString","hash","createHmac","update","digest","generateSignature","document","getElementById","style","display","init","disablePreview","success","console","log","join","tk","error","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","title","title2"],"mappings":"kPAKMA,G,QAASC,EAAQ,MAEvBC,UAAQC,aAAa,mCAAoC,OACzDD,UAAQE,cACRF,UAAQG,gBACRH,UAAQI,KAAKC,KAAK,SAClBL,UAAQI,KAAKE,OAAO,SAEpB,IACIC,EAAS,yBAETC,EAAgBC,aAAaC,QAAQ,aAErCC,EAAW,8EACXC,EAAWH,aAAaC,QAAQ,QAChCG,EAAS,UAAGJ,aAAaC,QAAQ,gBAAxB,QAAoC,0BAC7CI,EAAQ,UAAGL,aAAaC,QAAQ,mBAAxB,QAAuC,GA+DpCK,IA5DH,SAACC,GACX,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAwDA,OAtDAC,qBAAU,WAsBV,IAAsBC,EArBN,GAAVH,IAqBgBG,EAhBtB,SAA2Bd,EAAQe,EAAWd,EAAee,GAC3D,IAAMC,GAAY,IAAIC,MAAOC,UAAY,IACnCC,EAAMC,EAAOC,KAAKtB,EAASC,EAAgBgB,EAAYD,GAAMO,SACjE,UAEIC,EAAOjC,EACVkC,WAAW,SAAUV,GACrBW,OAAON,GACPO,OAAO,UAKV,OAJkBN,EAAOC,KAAP,UACbtB,EADa,YACHC,EADG,YACcgB,EADd,YAC2BD,EAD3B,YACmCQ,IACnDD,SAAS,UAfIK,CAAkB5B,EAdrB,uCAcwCC,EAZ7C,GAiCP4B,SAASC,eAAe,cAAcC,MAAMC,QAAU,QACtDvC,UAAQwC,KAAK,CACXC,gBAAgB,EAChB9B,SAAUA,EACV+B,QAAS,SAACA,GACRC,QAAQC,IAAIF,GACZ1C,UAAQ6C,KAAK,CACXxB,UAAWA,EACXb,cAAeA,EACfI,SAAUA,EACVL,OAAQA,EACRM,UAAWA,EACXC,SAAUA,EACVgC,GAzCY,GA0CZJ,QAAS,SAACA,GACRC,QAAQC,IAAIF,GACZvB,GAAU,IAEZ4B,MAAO,SAACA,GACNJ,QAAQC,IAAIG,GACZ5B,GAAU,OAIhB4B,MAAO,SAACA,GACNJ,QAAQC,IAAIG,GACZ5B,GAAU,SA7Cb,CAACD,IAkDG,M,mJCrEM8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,gCAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCDMlD,EAAQ,MAiB5B0D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC5C,EAAA,EAAD,CAAM6C,MAAO,QAASC,OAAQ,cAEhCzB,SAASC,eAAe,SAQ1BW,K","file":"static/js/32.432d8af0.chunk.js","sourcesContent":["// import React from 'react';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ZoomMtg } from \"@zoomus/websdk\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nconst crypto = require(\"crypto\");\r\n\r\nZoomMtg.setZoomJSLib(\"https://source.zoom.us/1.9.9/lib\", \"/av\");\r\nZoomMtg.preLoadWasm();\r\nZoomMtg.prepareWebSDK();\r\nZoomMtg.i18n.load(\"en-US\");\r\nZoomMtg.i18n.reload(\"en-US\");\r\n\r\nvar signatureEndpoint = \"\";\r\nvar apiKey = \"sw1o-LaLTtaMC0xjZ9ghdw\";\r\nvar apiSecret = \"NDRYGCnfiSXNSosr25YEPnKOkKU4rf8ksSiF\";\r\nvar meetingNumber = localStorage.getItem(\"meetingid\");\r\nvar role = 0;\r\nvar leaveUrl = \"https://acsasurabaya2021.com/wp-content/plugins/perki/build/#/theme/session\";\r\nvar userName = localStorage.getItem(\"nama\");\r\nvar userEmail = localStorage.getItem(\"email\") ?? \"random1002310@gmail.com\";\r\nvar passWord = localStorage.getItem(\"passcode\") ?? \"\";\r\nvar registrantToken = \"\";\r\n\r\nconst App = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isOpen != true) {\r\n      startMeeting(generateSignature(apiKey, apiSecret, meetingNumber, role));\r\n    }\r\n  }, [isOpen]);\r\n\r\n  function generateSignature(apiKey, apiSecret, meetingNumber, role) {    \r\n    const timestamp = new Date().getTime() - 30000;\r\n    const msg = Buffer.from(apiKey + meetingNumber + timestamp + role).toString(\r\n      \"base64\"\r\n    );\r\n    const hash = crypto\r\n      .createHmac(\"sha256\", apiSecret)\r\n      .update(msg)\r\n      .digest(\"base64\");\r\n    const signature = Buffer.from(\r\n      `${apiKey}.${meetingNumber}.${timestamp}.${role}.${hash}`\r\n    ).toString(\"base64\");\r\n\r\n    return signature;\r\n  }\r\n\r\n  function startMeeting(signature) {\r\n    document.getElementById(\"zmmtg-root\").style.display = \"block\";\r\n    ZoomMtg.init({\r\n      disablePreview: true,\r\n      leaveUrl: leaveUrl,\r\n      success: (success) => {\r\n        console.log(success);\r\n        ZoomMtg.join({\r\n          signature: signature,\r\n          meetingNumber: meetingNumber,\r\n          userName: userName,\r\n          apiKey: apiKey,\r\n          userEmail: userEmail,\r\n          passWord: passWord,\r\n          tk: registrantToken,\r\n          success: (success) => {\r\n            console.log(success);\r\n            setIsOpen(true);\r\n          },\r\n          error: (error) => {\r\n            console.log(error);\r\n            setIsOpen(false);\r\n          },\r\n        });\r\n      },\r\n      error: (error) => {\r\n        console.log(error);\r\n        setIsOpen(false);\r\n      },\r\n    });\r\n  }\r\n\r\n  return \"\";\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { useLocation } from \"react-router-dom\";\nconst queryString = require('query-string');\n\n\n\n// function App1() {\n//   const location = useLocation();\n\n//   return (\n//     <React.StrictMode>\n//     <App  title={URLSearchParams(window.location.search).get(\"hasil\")} title2={\"Hockey2\"} />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n//   );\n// }\n\n// export default App1;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App  title={\"hallo\"} title2={\"Hockey2\"} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// const { id } = useParams();\n\nreportWebVitals();\n\n\n"],"sourceRoot":""}