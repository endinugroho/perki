{"version":3,"sources":["views/google-maps/GoogleMaps.js","reusable/DocsLink.js","reusable/ProBadge.js"],"names":["defaultCenter","lat","lng","locations","label","draggable","title","www","MarkerList","map","location","index","MarkerWithInfoWindow","toString","React","useState","isOpen","setIsOpen","onClick","position","onCloseClick","href","target","GoogleMapsComponent","withScriptjs","withGoogleMap","defaultZoom","ReactGoogleMaps","googleMapURL","loadingElement","style","height","containerElement","mapElement","DocsLink","props","name","text","rest","className","rel","memo","ProBadge","children","attributes","color"],"mappings":"oPAqBMA,EAAgB,CAAEC,IAAK,UAAWC,KAAM,YACxCC,EAAY,CAChB,CACEF,IAAK,UACLC,KAAM,WACNE,MAAO,IACPC,WAAW,EACXC,MAAO,WACPC,IAAK,6BAEP,CACEN,IAAK,UACLC,KAAM,WACNE,MAAO,IACPC,WAAW,EACXC,MAAO,QACPC,IAAK,0BAEP,CACEN,IAAK,UACLC,KAAM,SACNE,MAAO,IACPC,WAAW,EACXC,MAAO,QACPC,IAAK,0BAEP,CACEN,IAAK,UACLC,KAAM,WACNE,MAAO,IACPC,WAAW,EACXC,MAAO,WACPC,IAAK,8BAIHC,EAAa,WACjB,OAAOL,EAAUM,KAAI,SAACC,EAAUC,GAC9B,OACE,cAACC,EAAD,CAA6CF,SAAUA,GAA5BC,EAAME,gBAKjCD,EAAuB,SAAC,GAAgB,IAAfF,EAAc,EAAdA,SAC7B,EAA4BI,IAAMC,UAAS,GAA3C,mBAAOC,EAAP,KAAeC,EAAf,KAEA,OACE,cAAC,SAAD,CACEC,QAAS,kBAAMD,GAAWD,IAC1BG,SAAUT,EACVJ,MAAOI,EAASJ,MAChBF,MAAOM,EAASN,MAJlB,SAMIY,GACA,cAAC,aAAD,CAAYI,aAAc,kBAAMH,GAAU,IAA1C,SACE,cAAC,KAAD,CAAUI,KAAMX,EAASH,IAAKe,OAAO,SAArC,SAA+CZ,EAASJ,aAO5DiB,EAAsBC,uBAAaC,yBAAc,WACnD,OACE,cAAC,YAAD,CAAWC,YAlEG,GAkEuB1B,cAAeA,EAApD,SACG,cAACQ,EAAD,CAAYL,UAAWA,UA2BjBwB,UArBS,WACtB,OACE,eAAC,IAAD,WACE,eAAC,IAAD,+BACoB,IAClB,cAAC,IAAD,IACA,cAAC,IAAD,CAAUN,KAAK,sDAEjB,cAAC,IAAD,UACE,cAACE,EAAD,CAEEK,aAAY,gGAtFP,2CAuFLC,eAAgB,qBAAKC,MAAO,CAACC,OAAO,UACpCC,iBAAkB,qBAAKF,MAAO,CAACC,OAAO,WACtCE,WAAY,qBAAKH,MAAO,CAACC,OAAO,WAJ5B,c,6KCpGRG,EAAW,SAAAC,GACf,IACEC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,KACGC,EAHL,YAIIH,EAJJ,GAMMd,EAAOe,EAAI,kDAA8CA,GAASD,EAAMd,KAE9E,OACE,qBAAKkB,UAAU,sBAAf,SACE,cAAC,KAAD,2BACMD,GADN,IAEEjB,KAAMA,EACNmB,IAAI,sBACJlB,OAAO,SACPiB,UAAU,qBALZ,SAOE,uBAAOA,UAAU,aAAjB,SAAgCF,GAAQ,eAMjCvB,MAAM2B,KAAKP,G,eCvBpBQ,EAAW,SAAAP,GACf,qBAAuCA,GAAjCQ,EAAN,EAAMA,SAAaC,EAAnB,iBACA,OACE,cAAC,IAAD,yBACEvB,KAAK,+BACLwB,MAAM,SACNvB,OAAO,SACPkB,IAAI,uBACAI,GALN,aAOGD,GAAsB,2BASd7B,MAAM2B,KAAKC","file":"static/js/75.62ca9001.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CNavLink\r\n} from '@coreui/react'\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow\r\n} from 'react-google-maps'\r\nimport { ProBadge, DocsLink } from 'src/reusable'\r\n\r\n\r\n// To use the Google Maps JavaScript API, you must register your app project on the Google API Console and get a Google API key which you can add to your app\r\nconst apiKey = 'AIzaSyASyYRBZmULmrmw_P9kgr7_266OhFNinPA'\r\n\r\nconst defaultZoom = 11\r\nconst defaultCenter = { lat: 37.431489, lng: -122.163719 }\r\nconst locations = [\r\n  {\r\n    lat: 37.431489,\r\n    lng: -122.163719,\r\n    label: 'S',\r\n    draggable: false,\r\n    title: 'Stanford',\r\n    www: 'https://www.stanford.edu/'\r\n  },\r\n  {\r\n    lat: 37.394694,\r\n    lng: -122.150333,\r\n    label: 'T',\r\n    draggable: false,\r\n    title: 'Tesla',\r\n    www: 'https://www.tesla.com/'\r\n  },\r\n  {\r\n    lat: 37.331681,\r\n    lng: -122.030100,\r\n    label: 'A',\r\n    draggable: false,\r\n    title: 'Apple',\r\n    www: 'https://www.apple.com/'\r\n  },\r\n  {\r\n    lat: 37.484722,\r\n    lng: -122.148333,\r\n    label: 'F',\r\n    draggable: false,\r\n    title: 'Facebook',\r\n    www: 'https://www.facebook.com/'\r\n  }\r\n]\r\n\r\nconst MarkerList = () => {\r\n  return locations.map((location, index) => {\r\n    return (\r\n      <MarkerWithInfoWindow key={index.toString()} location={location}/>\r\n    )\r\n  })\r\n}\r\n\r\nconst MarkerWithInfoWindow = ({location}) => {\r\n  const [isOpen, setIsOpen] = React.useState(false)\r\n\r\n  return (\r\n    <Marker \r\n      onClick={() => setIsOpen(!isOpen)} \r\n      position={location} \r\n      title={location.title} \r\n      label={location.label}\r\n    >\r\n      { isOpen &&\r\n        <InfoWindow onCloseClick={() => setIsOpen(false)}>\r\n          <CNavLink href={location.www} target=\"_blank\">{location.title}</CNavLink>\r\n        </InfoWindow>\r\n      }\r\n    </Marker>\r\n  )\r\n}\r\n\r\nconst GoogleMapsComponent = withScriptjs(withGoogleMap(() => {\r\n    return (\r\n      <GoogleMap defaultZoom={defaultZoom} defaultCenter={defaultCenter}>\r\n        {<MarkerList locations={locations}/>}\r\n      </GoogleMap>\r\n    )\r\n  }\r\n))\r\n\r\nconst ReactGoogleMaps = () => {\r\n  return (\r\n    <CCard>\r\n      <CCardHeader>\r\n        React Google Maps{' '}\r\n        <ProBadge/>\r\n        <DocsLink href=\"https://github.com/tomchentw/react-google-maps\"/>\r\n      </CCardHeader>\r\n      <CCardBody>\r\n        <GoogleMapsComponent\r\n          key=\"map\"\r\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${apiKey}`}\r\n          loadingElement={<div style={{height: `100%`}}/>}\r\n          containerElement={<div style={{height: `400px`}}/>}\r\n          mapElement={<div style={{height: `100%`}}/>}\r\n        />\r\n      </CCardBody>\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default ReactGoogleMaps\r\n","import React from 'react'\r\nimport { CLink } from '@coreui/react'\r\n\r\nconst DocsLink = props => {\r\n  const {\r\n    name,\r\n    text,\r\n    ...rest\r\n  } = props\r\n\r\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\r\n\r\n  return (\r\n    <div className=\"card-header-actions\">\r\n      <CLink \r\n        {...rest}\r\n        href={href}\r\n        rel=\"noreferrer noopener\" \r\n        target=\"_blank\" \r\n        className=\"card-header-action\"  \r\n      >\r\n        <small className=\"text-muted\">{ text || 'docs' }</small>\r\n      </CLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(DocsLink)","import React from 'react'\r\nimport { CBadge } from '@coreui/react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProBadge = props => {\r\n  let { children, ...attributes } = { ...props }\r\n  return (\r\n    <CBadge\r\n      href=\"https://coreui.io/pro/react/\"\r\n      color=\"danger\"\r\n      target=\"_blank\"\r\n      rel=\"noreferrer noopener\"\r\n      {...attributes}\r\n    >\r\n      {children ? children : 'CoreUI Pro Component'}\r\n    </CBadge>\r\n  )\r\n}\r\n\r\nProBadge.propTypes = {\r\n  children: PropTypes.node\r\n}\r\n\r\nexport default React.memo(ProBadge)\r\n"],"sourceRoot":""}